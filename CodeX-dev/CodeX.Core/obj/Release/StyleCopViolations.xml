<StyleCopViolations>
  <Violation Section="Root" LineNumber="1" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\DateTime.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileHeaderFileNameDocumentationMustMatchTypeName" RuleId="SA1649">The file attribute in the file header's copyright tag must contain the name of the first type in the file and can be any of these: "Date"</Violation>
  <Violation Section="Root.CodeX.IO.IO.Sort%string%int%ListSortDirection%string" LineNumber="240" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\IO.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.CodeX.IO.XmlTextWriterFormattedNoDeclaration" LineNumber="535" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\IO.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation Section="Root.CodeX.Core" LineNumber="559" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\IO.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleNamespace" RuleId="SA1403">A C# document may only contain a single namespace.</Violation>
  <Violation Section="Root.CodeX.IO.XmlTextWriterFormattedNoDeclaration.XmlTextWriterFormattedNoDeclaration%TextWriter%bool" LineNumber="545" StartLine="545" StartColumn="13" EndLine="545" EndColumn="22" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\IO.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Formatting must begin with the 'this.', 'base.', 'object.' or 'XmlTextWriterFormattedNoDeclaration.' or 'XmlTextWriter.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.CodeX.IO.XmlTextWriterFormattedNoDeclaration.WriteStartDocument" LineNumber="553" StartLine="553" StartColumn="13" EndLine="553" EndColumn="35" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\IO.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root" LineNumber="1" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.CodeX.Security.GeneratePassword%int%string" LineNumber="32" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationMustContainValidXml" RuleId="SA1603">The documentation header is composed of invalid Xml: An error occurred while parsing EntityName. Line 5, position 146.</Violation>
  <Violation Section="Root.CodeX.Security.ReadByteArray%Stream" LineNumber="98" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.CodeX.Security" LineNumber="46" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX.Security.Encrypt%string%string%string" LineNumber="73" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.CodeX.Security" LineNumber="97" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX.Security.ReadByteArray%Stream" LineNumber="110" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="129" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.CodeX" LineNumber="150" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX" LineNumber="151" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.CodeX.Security.Encrypt%string%string%string" LineNumber="63" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'msEncrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.CodeX.Security.Encrypt%string%string%string" LineNumber="67" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'csEncrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.CodeX.Security.Encrypt%string%string%string" LineNumber="69" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'swEncrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="134" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'msDecrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="141" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'csDecrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="142" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'srDecrypt' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.System" LineNumber="5" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.System.IO" LineNumber="6" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.System.Linq" LineNumber="7" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.System.Security.Cryptography" LineNumber="8" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.System.Text" LineNumber="9" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.CodeX.Security.ReadByteArray%Stream" LineNumber="127" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="127" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="127" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.CodeX.Security.Decrypt%string%string%string" LineNumber="127" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Security.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToUTF8%string" LineNumber="48" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToUTF7%string" LineNumber="59" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToUTF32%string" LineNumber="70" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToASCII%string" LineNumber="81" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToBigEndianUnicode%string" LineNumber="91" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToUnicode%string" LineNumber="102" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToBase64%string%int%int%Base64FormattingOptions" LineNumber="119" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.ToBase64%string%Base64FormattingOptions" LineNumber="133" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetBytes%string" LineNumber="167" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetBytes%string%Encoding" LineNumber="180" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%int%int" LineNumber="202" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%Encoding" LineNumber="213" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%Encoding%int%int" LineNumber="226" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation Section="Root" LineNumber="1" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileHeaderMustShowCopyright" RuleId="SA1634">The file header must contain a copyright tag.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings" LineNumber="28" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings" LineNumber="42" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings" LineNumber="108" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings" LineNumber="124" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.System" LineNumber="3" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.System.Text" LineNumber="4" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.Fill%string%object[]" LineNumber="25" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetBytes%string%Encoding" LineNumber="180" StartLine="180" StartColumn="52" EndLine="180" EndColumn="52" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%int%int" LineNumber="202" StartLine="202" StartColumn="57" EndLine="202" EndColumn="57" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%int%int" LineNumber="202" StartLine="202" StartColumn="67" EndLine="202" EndColumn="67" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%int%int" LineNumber="204" StartLine="204" StartColumn="52" EndLine="204" EndColumn="52" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%int%int" LineNumber="204" StartLine="204" StartColumn="58" EndLine="204" EndColumn="58" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%Encoding" LineNumber="213" StartLine="213" StartColumn="57" EndLine="213" EndColumn="57" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
  <Violation Section="Root.CodeX.Strings.Strings.GetString%byte[]%Encoding%int%int" LineNumber="226" StartLine="226" StartColumn="57" EndLine="226" EndColumn="57" Source="D:\Community\codeX\CodeX-dev\CodeX.Core\Strings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CommasMustBeSpacedCorrectly" RuleId="SA1001">Invalid spacing around the comma.</Violation>
</StyleCopViolations>